---
import Button from "../components/Button.astro";
import Circles from "../assets/Circles.svg";
import { buttonTranslations } from "@/content/translations";
const { language, heading, subtitle, introText, Scribble, page } = Astro.props;
const showButton = page !== "projects";
---

<section>
  <img
    src={Scribble.src}
    alt=""
    class="scribble"
    fetchpriority="high"
    loading="eager"
  />
  <div class="container">
    <img
      src={Circles.src}
      alt=""
      class="circles-svg"
      fetchpriority="high"
      loading="eager"
    />
    <div class="hero-container">
      <h1 class="hero-heading animatable">
        {heading}
      </h1>
      <p class="subtitle animatable">{subtitle}</p>
      {introText && <p class="hero-paragraph">{introText}</p>}

      <div class="button-wrapper hero-button-wrapper">
        <Button
          linkText={buttonTranslations("contact", language)}
          target=`/${language}/contact`
          class="hero-button-1"
          variant="primary"
        />
        {
          !showButton && (
            <Button
              linkText={buttonTranslations("aboutus", language)}
              target={`/${language}/about`}
              class="hero-button-2"
              variant="secondary"
            />
          )
        }
        {
          showButton && (
            <Button
              linkText={buttonTranslations("projects", language)}
              target={`/${language}/projects`}
              class="hero-button-2"
            />
          )
        }
      </div>
    </div>
  </div>
</section>
<style>
  section {
    display: flex;
    flex-direction: row-reverse;
    justify-content: space-between;
    align-items: center;
    position: relative;
    min-height: 80vh;
    margin: 0 auto;
    gap: 50px;
    padding-top: 100px;
    background-image: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0.5),
      rgba(0, 0, 0, 0.7),
      var(--verydarkgray)
    );
  }
  .container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 50px;
    @media screen and (max-width: 820px) {
      flex-direction: column-reverse;
      padding: 0 20px;
    }
    @media screen and (max-width: 1024px) and (min-width: 821px) {
      flex-direction: column-reverse;
      padding: 0 70px;
    }
  }
  h1 {
    color: var(--lightgray);
    font-weight: 700;
    font-size: 3rem;
    max-width: 75%;
    letter-spacing: -1px;
    text-align: center;
    font-family: "Afacadflux", sans-serif;
    text-transform: uppercase;
    margin: 0;
    @media screen and (max-width: 820px) {
      font-size: 2rem;
      text-align: left;
      max-width: 100%;
      width: 100%;
    }
  }
  p {
    color: var(--lightgray);
    max-width: 600px;
    line-height: 1.3rem;
    font-weight: 600;
    font-size: 1rem;
    text-align: center;
    @media screen and (max-width: 820px) {
      text-align: left;
    }
  }
  .hero-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    gap: 5px;
    padding: 50px 0;
    @media screen and (max-width: 820px) {
      gap: 0px;
    }
  }
  .subtitle {
    text-align: center;
    margin: 0;
    margin-top: 10px;
    font-weight: 700;
    font-size: 1.2rem;
    letter-spacing: 4px;
    margin-bottom: 30px;
    line-height: 85%;
    font-family: "Afacadflux", sans-serif;
    text-transform: uppercase;
    color: var(--sand);

    @media screen and (max-width: 820px) {
      text-align: left;
      margin-top: 0px;
      width: 100%;
      font-size: 1.1rem !important;
    }
  }
  img {
    width: 80%;
    height: auto;
    object-fit: cover;
    border-radius: 50px;
    @media screen and (max-width: 820px) {
      width: 90%;
    }
  }
  .scribble {
    width: 100%;
    height: 100%;
    border-radius: 0;
    position: absolute;
    top: 0;
    left: 0;
    object-fit: cover;
    z-index: -1;
    opacity: 1;
  }
  .circles-svg {
    position: absolute;
    z-index: -1;
    width: 80%;
    object-fit: contain;
    top: 0;
    filter: blur(100px);
    opacity: 0.05;
  }
</style>
